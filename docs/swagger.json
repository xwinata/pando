{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Pando API",
        "contact": {
            "name": "richstain",
            "email": "richstain2u@gmail.com"
        },
        "license": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/client/login": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "login returns token and expire time in seconds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "JSON request body",
                        "name": "RequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helper.EchoResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.EchoResp"
                        }
                    }
                }
            }
        },
        "/user/user": {
            "get": {
                "security": [
                    {
                        "OAuth2Password": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "View current user datas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ViewCurrentUserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helper.EchoResp"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helper.EchoResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helper.EchoResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.LoginPayload": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "pass123"
                },
                "username": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code explanations\n0000 = Success\n0001 = Error Validation\n0002 = Function Error\n0003 = Permission denied",
                    "type": "string",
                    "example": "0001"
                },
                "details": {
                    "type": "object",
                    "$ref": "#/definitions/handlers.LoginResponseDetails"
                },
                "message": {
                    "type": "string",
                    "example": "this is example message"
                }
            }
        },
        "handlers.LoginResponseDetails": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer",
                    "example": 3600
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJle..."
                }
            }
        },
        "handlers.ViewCurrentUserResponse": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "helper.EchoResp": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code explanations\n0000 = Success\n0001 = Error Validation\n0002 = Function Error\n0003 = Permission denied",
                    "type": "string",
                    "example": "0001"
                },
                "details": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "this is example message"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}